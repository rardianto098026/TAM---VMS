<style type="text/css">
    .select2-container {
        z-index: 1000000000;
    }
</style>

<script type="text/javascript">
    function onDataBound(e) {
        ShowOriginalKendoToolTip();
    }

    function downloadFile(id) {
        // Manually build the URL with the slash
        var url = '@Url.Action("DownloadVendorDatabase", "VendorDatabase")' + '/DownloadFile?id=' + id;
        window.location.href = url;
    }

    function UserManager() {
        return {
            InitManagement: function () {
                this.InitHandlers();
                onDataBound();
            },
            InitHandlers: function () {
                const self = this;

                $("#btnRequestPositive").on('click', function () {
                    const $el = $(this),
                        $modal = $el.closest(".modal");

                    let errMsg = "";
                    debugger;
                    $el.prop("disabled", true);

                    $.postv2("@Url.Content("~/VendorDatabase/DownloadVendorDatabase/AddRequest")", { }, function (d) {
                        if (d == "") {
                            $.helper.grid.refresh("vendorDBGrid");
                            $modal.modal("hide");
                            swal("Info", "Success create request Vendor Database", "success");
                        } else {
                            swal("Error", d, "error");
                        }
                    }).fail(function () {
                        swal("Error", "Error when requesting Vendor Database", "error");
                    }).always(function () {
                        $el.prop("disabled", false);
                    });
                });

                $('.cball').change(function () {
                    const table = $(this).closest('table');
                    $('td input:checkbox', table).prop('checked', this.checked);
                });

                const grid = $("#vendorDBGrid").data("kendoGrid");

                grid.bind("dataBound", function () {
                    const items = grid.items();
                    let rowNumber = grid.dataSource.page() * grid.dataSource.pageSize() - grid.dataSource.pageSize() + 1;

                    items.each(function () {
                        $(this).find("td:nth-child(1)").html(rowNumber++);
                    });

                    const today = new Date();
                    today.setHours(0, 0, 0, 0);
                    const hasTodayRecord = grid.dataSource.data().some(function (dataItem) {
                        return new Date(dataItem.ReqDate).setHours(0, 0, 0, 0) === today.getTime();
                    });

                    const $btnRequest = $("#btnRequest");
                    if (hasTodayRecord) {
                        $btnRequest.replaceWith('<span class="btn btn-grey" style="border-radius: 8px; font-size: 12px; width: 200px;" disabled>Request</span>');
                    } else {
                        $btnRequest.replaceWith('<a href="#" class="btn btn-success btn-sm" style="border-radius: 8px; font-size: 12px; width: 200px;" id="btnRequest">Request</a>');
                    }
                });

                $(document).on('click', '#btnRequest', function () {
                    const $modal = $.helper.getJqueryObject('RequestModal'),
                        $form = $modal.find("form");

                    $('.nav-tabs a[href="#tab_user"]').tab('show');
                    $.helper.form.clear($form);
                    $modal.modal("show");
                    $(".form-select2").select2();
                });
            }
        };
    }

    $(document).ready(function () {
        const userManager = new UserManager();
        userManager.InitManagement();
    });
</script>
