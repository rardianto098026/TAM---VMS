<style type="text/css">
    .select2-container {
        z-index: 1000000000;
    }
</style>
<script type="text/javascript">

    function onDataBound(e) {
        ShowOriginalKendoToolTip();
    }

    function UserManager() {

        return {

            InitManagement: function () {
                this.InitHandlers();
                onDataBound();
            },
            InitHandlers: function () {
                $("#btnRequest").on('click', function (e) {
                    var $modal = $.helper.getJqueryObject('RequestModal'),
                        $form = $modal.find("form");

                    $('.nav-tabs a[href="#tab_user"]').tab('show');
                    $.helper.form.clear($form);

                    $modal.modal("show");
                    $(".form-select2").select2();
                });

                $('.k-grid').on('click', '.btnEdit', function (e) {
                    let $el = $(this),
					    $tr = $el.closest("tr"),
					    $grid = $el.closest(".k-grid").data("kendoGrid"),
                        dataItem = $grid.dataItem($tr),
					    $modal = $.helper.getJqueryObject($el.data("modal")),
                        $form = $modal.find("form");
                    dataItem.RoleID = dataItem.RoleID != null ? dataItem.RoleID.toLowerCase() : null;

                    $('.nav-tabs a[href="#tab_user"]').tab('show');
                    $.helper.form.clear($form);
                    $.helper.form.fill($form, dataItem);


                    if (dataItem.RoleID) {
                        rolesid = dataItem.RoleID.split(',');
                        for (i = 0; i < rolesid.length; i++) {
                            $('#UserRoleGrid tbody tr td input[type="checkbox"][value="' + rolesid[i].toLowerCase() + '"]').prop('checked', true);
                        }
                    }

                    $modal.modal("show");
                    $(".form-select2").select2();

                });


                $('.k-grid').on('click', '.btnResetPw', function (e) {
                    let $el = $(this),
                        $tr = $el.closest("tr"),
                        $grid = $el.closest(".k-grid").data("kendoGrid"),
                        dataItem = $grid.dataItem($tr),
                        $modal = $.helper.getJqueryObject($el.data("modal")),
                        $form = $modal.find("form");

                    $.helper.form.clear($form);
                    $("#IdResetPW").val(dataItem.ID);

                    $modal.modal("show");

                });

                $('.k-grid').on('click', '.btnDelete', function (e) {
                    let id = $(this).data("id");

                    swal({
					    title: "Confirmation",
					    text: "Are you sure want to delete data? ",
					    icon: "warning",
					    buttons: [
						    'No',
						    'Yes'
					    ],
					    dangerMode: true
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            $.postv2("@Url.Content("~/core/user/deleteuser")", { "ID": id }, function (d) {
                                $.helper.grid.refresh("vendorDBGrid");

                                swal("Info", "Success delete user", "success");
                            }).fail(function (error) {
                                swal("Error", error.responseJSON.Message, "error");
                            });
                        }
                    })
                });

                $("#btnRequestPositive").on('click', function (event) {
                    var $el = $(this),
                        isError = false,
                        $modal = $(this).closest(".modal"),
                        $form = $modal.find("form");
                    
                    var formData = $.helper.form.serializeObject($form);
                    debugger;

                    errMsg = "";

                    $el.prop("disabled", true);

                    $.postv2("@Url.Content("~/VendorDatabase/DownloadVendorDatabase/AddRequest")", { user: formData }, function (d) {
                        if (d == "") {
                            $.helper.grid.refresh("vendorDBGrid");
                            $modal.modal("hide");
                            swal("Info", "Success update user", "success");
                        } else {
                            swal("Error", d, "error");
                        }
                    }).fail(function () {
                        swal("Error", "Error when requesting Vendor Database", "error");
                    });

                    $el.prop("disabled", false);
                });

                $('.cball').change(function (e) {
                    var table = $(e.target).closest('table');
                    $('td input:checkbox', table).prop('checked', this.checked);
                });

                var grid = $("#vendorDBGrid").data("kendoGrid");

                grid.bind("dataBound", function () {
                    var items = grid.items();
                    var rowNumber = grid.dataSource.page() * grid.dataSource.pageSize() - grid.dataSource.pageSize() + 1;

                    items.each(function () {
                        $(this).find("td:nth-child(1)").html(rowNumber++); // Update the row number cell
                    });
                });
            },
        };
    }

    // On document ready
    $(document).ready(function () {
	    UserManager = new UserManager();
        UserManager.InitManagement();
    });

</script>
